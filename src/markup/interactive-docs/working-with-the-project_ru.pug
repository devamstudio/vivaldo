extends ../layouts/interactive-docs

block prepend head
    -var document_title = ': Работа с проектом'
    -var docs_lang = 'ru'

block main
    .container
        +heading('h1')(class='heading__h2') Работа с проектом
        +heading('h2')(class='heading__h3') Верстка
        p.text Рабочие файлы проекта — оформлены на pug-синтаксисе. Это короткая запись, которая кроме короткости позволяет делать много крутых штук, например наследование шаблонов, использование миксинов, частичное использование js-синтаксиса для верстки проекта.
        p.text Полную и подробную документацию о том, как работать с проектом вы можете найти на 
            +link('https://pugjs.org') официальном сайте
            | .
        p.text У нас же все реализовано по следующей логике:
        
        +heading('h3')(class='heading__h4') Шаблоны
        p.text Элементы шаблонов расположены в нескольких местах:
        ul.list
            li.list_item #[code.code src/markup/layouts/] верстка
            li.list_item #[code.code src/style/layouts/] стили
            li.list_item #[code.code src/markup/&#91;название шаблона&#93;] билд страниц по шаблонам
            
        +heading('h3')(class='heading__h4') Блоки
        p.text Помимо использованных заготовок из FA-Kit в данном проекте создано множество уникальных блоков (читай БЭМ). Все они находяться в папке #[code.code src/blocks/]. Где каждый проименован и содержит в себе набор зависимостей для проекта.
        p.text Например для заголовка создан миксин, который принимает аргументы и выводит их при рендере. Для его использования в проекте необходимо подключить в шаблоне(#[code.code src/markup/layouts/&#91;название шаблона&#93;]) или в странице (#[code.code src/markup/&#91;название шаблона&#93;/&#91;название страницы&#93;]).
        p.text В самой же папке блока содержиться файл heading.pug. Именно и его и надо подключать для использования миксина следующим образом: #[code.code +heading('h1') Заголовок]
        
        +heading('h3')(class='heading__h4') Демо
        p.text Демо-данные, на которых происходит построение шаблонов находятся в папке #[code.code src/data].
        
        +heading('h3')(class='heading__h4') Манифест билда
        p.text Логика проекта собирается вручную. Т.е. для сборки демо использован манифест #[code.code src/build.js].
        
        +heading('h3')(class='heading__h4') FA-Kit
        p.text Данный фреймворк находится в постоянно разработке, поэтому имеет смысл проверять обновления на странице проекта.
        p.text Помимо указанных классов и компонентов в документации для обычного пользования темой, там присутствуют еще возможности и для продвинутого. В частности — изменять переменные, дабы получить на выходе дизайн со своими стилями.
        p.text Но не менее важными являются миксины:
        ul.list
            li.list_item #[code.code media_query_up] — для размеров экрана больше точки отсчета
            li.list_item #[code.code media_query_down] — для размеров экрана меньше точки отсчета
            li.list_item #[code.code media_query_between] — медиазапрос между двух точек, например от xs до lg
            li.list_item #[code.code touch_grid] — для создания колонок
        p.text Также присутствуют классы типа ghost:
        p.text %none-select — его можно наследовать при создании других классов таким образом чтобы пользователь не мог выделять содержимое